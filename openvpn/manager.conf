# manager.conf - Конфигурационный файл для скриптов управления OpenVPN
# Этот файл должен находиться в /etc/openvpn/manager.conf

# Пути к основным файлам и директориям
OPENVPN_DIR="/etc/openvpn"
SERVER_CONF="${OPENVPN_DIR}/server.conf"
EASYRSA_DIR="${OPENVPN_DIR}/easy-rsa"
CLIENT_CONFIG_DIR="${OPENVPN_DIR}/client"
BACKUP_DIR="${OPENVPN_DIR}/backup"
CCD_DIR="${OPENVPN_DIR}/ccd"

# Пути к файлам сертификатов
CA_CERT="${OPENVPN_DIR}/ca.crt"
TLS_KEY="${OPENVPN_DIR}/ta.key"
SERVER_CERT="${OPENVPN_DIR}/server.crt"
SERVER_KEY="${OPENVPN_DIR}/server.key"
DH_PARAMS="${OPENVPN_DIR}/dh.pem"
CRL_FILE="${OPENVPN_DIR}/crl.pem"

# Параметры EasyRSA
KEY_SIZE="2048"
CERT_EXPIRE="3650"
CA_EXPIRE="7300"

# Параметры логирования
LOG_DIR="/var/log/openvpn"
STATUS_LOG="/var/log/openvpn/status.log"
OPENVPN_LOG="/var/log/openvpn/openvpn.log"
MANAGER_LOG="${LOG_DIR}/manager.log"

# Параметры управления
MANAGEMENT_HOST="localhost"
MANAGEMENT_PORT="7505"

# Email для уведомлений (опционально)
ADMIN_EMAIL=""

# Дополнительные параметры
ENABLE_COMPRESSION="no"
DEFAULT_CLIENT_TO_CLIENT="no"

# Функция для извлечения параметров из server.conf
get_server_param() {
    local param=$1
    local default=$2
    local value
    
    if [ -f "$SERVER_CONF" ]; then
        case $param in
            "port")
                value=$(grep -E "^port\s+" "$SERVER_CONF" | awk '{print $2}')
                ;;
            "proto")
                value=$(grep -E "^proto\s+" "$SERVER_CONF" | awk '{print $2}')
                ;;
            "server_network")
                value=$(grep -E "^server\s+" "$SERVER_CONF" | awk '{print $2}')
                ;;
            "server_netmask")
                value=$(grep -E "^server\s+" "$SERVER_CONF" | awk '{print $3}')
                ;;
            "max_clients")
                value=$(grep -E "^max-clients\s+" "$SERVER_CONF" | awk '{print $2}')
                ;;
            "dns1")
                value=$(grep -E "push.*dhcp-option DNS" "$SERVER_CONF" | head -1 | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+")
                ;;
            "dns2")
                value=$(grep -E "push.*dhcp-option DNS" "$SERVER_CONF" | tail -1 | grep -oE "[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+")
                ;;
            "redirect_gateway")
                grep -qE "^push.*redirect-gateway" "$SERVER_CONF" && value="yes" || value="no"
                ;;
            "auth_alg")
                value=$(grep -E "^auth\s+" "$SERVER_CONF" | awk '{print $2}')
                ;;
            "cipher_list")
                value=$(grep -E "^data-ciphers\s+" "$SERVER_CONF" | cut -d' ' -f2-)
                ;;
        esac
    fi
    
    echo "${value:-$default}"
}

# Динамические параметры, извлекаемые из server.conf
SERVER_PORT=$(get_server_param "port" "1194")
SERVER_PROTO=$(get_server_param "proto" "udp")
SERVER_NETWORK=$(get_server_param "server_network" "10.8.0.0")
SERVER_NETMASK=$(get_server_param "server_netmask" "255.255.255.0")
MAX_CLIENTS=$(get_server_param "max_clients" "100")
CLIENT_DNS1=$(get_server_param "dns1" "8.8.8.8")
CLIENT_DNS2=$(get_server_param "dns2" "8.8.4.4")
REDIRECT_GATEWAY=$(get_server_param "redirect_gateway" "yes")
AUTH_ALG=$(get_server_param "auth_alg" "SHA256")
CIPHER_LIST=$(get_server_param "cipher_list" "AES-256-GCM:AES-128-GCM:CHACHA20-POLY1305:AES-256-CBC")

# Функция для получения внешнего IP адреса
get_server_ip() {
    # Проверяем кеш
    local cache_file="${OPENVPN_DIR}/.server_ip_cache"
    local cache_age=86400  # 24 часа
    
    if [ -f "$cache_file" ]; then
        local file_age=$(($(date +%s) - $(stat -c %Y "$cache_file" 2>/dev/null || echo 0)))
        if [ $file_age -lt $cache_age ]; then
            cat "$cache_file"
            return
        fi
    fi
    
    # Получаем IP различными способами
    local ip=""
    local methods=(
        "curl -s --max-time 5 ifconfig.me"
        "curl -s --max-time 5 icanhazip.com"
        "curl -s --max-time 5 ipinfo.io/ip"
        "dig +short myip.opendns.com @resolver1.opendns.com"
    )
    
    for method in "${methods[@]}"; do
        ip=$(eval $method 2>/dev/null)
        if [[ $ip =~ ^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
            echo "$ip" > "$cache_file"
            echo "$ip"
            return
        fi
    done
    
    # Если не удалось получить, возвращаем заглушку
    echo "YOUR_SERVER_IP"
}

# Динамически определяемый IP сервера
SERVER_IP=$(get_server_ip)

# Экспорт переменных для использования в других скриптах
export OPENVPN_DIR SERVER_CONF EASYRSA_DIR CLIENT_CONFIG_DIR BACKUP_DIR CCD_DIR
export CA_CERT TLS_KEY SERVER_CERT SERVER_KEY DH_PARAMS CRL_FILE
export LOG_DIR STATUS_LOG OPENVPN_LOG MANAGER_LOG
export SERVER_IP SERVER_PORT SERVER_PROTO
export CLIENT_DNS1 CLIENT_DNS2 REDIRECT_GATEWAY
export AUTH_ALG CIPHER_LIST MAX_CLIENTS